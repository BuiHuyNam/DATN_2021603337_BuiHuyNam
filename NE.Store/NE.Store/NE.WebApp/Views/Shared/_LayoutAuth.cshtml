<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewData["Title"]</title>
    <!-- Bootstrap 5 CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
 <style>
     
    .left-side {
        background-image: url('/NEStore/img/banner/auth2.webp'); /* Không dùng ~/ trong CSS */
        background-size: cover;
        background-position: center;
        min-height: 100vh;
    }

    .login-wrapper {
        max-width: 960px;
        margin:  auto;
        height: 100%;
        border-radius: 20px;
        overflow: hidden; /* Đảm bảo góc bo tròn không bị ảnh nền tràn ra */
    }
</style>

</head>
<body>
    <div class="login-wrapper bg-white rounded-4 shadow overflow-hidden">
        <div class="container-fluid" >
            <div class="row">
                <!-- Left Side (Background Image) -->
                <div class="col-md-6 d-none d-md-block left-side">
                </div>

                <!-- Right Side (Login Form) -->
                <div class="col-md-6 d-flex align-items-center justify-content-center bg-light" style="min-height: 100vh;">
                   
                    @RenderBody()
                </div>

            </div>
        </div>
    </div>

    <!-- Icon để mở chatbot -->
    <div id="chatbotIcon" style="position: fixed; bottom: 20px; right: 20px; cursor: pointer;">
        <img src="~/NEStore/img/chatbot2.png" style="width: 80px; height: 80px" />
    </div>


    <!-- Giao diện chatbot ẩn mặc định -->
    <div class="chatbot" id="chatbot" style="display: none;">
        <div class="card">
            <div class="card-header bg-custom text-white d-flex justify-content-between align-items-center">
                <span>Chatbot AI</span>
                <button id="closeChatbot" class="btn btn-close" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="card-body" id="chatbotMessages" style="height: 300px; overflow-y: auto;"></div>
            <div class="input-group mb-3">
                <input type="text" id="chatbotInput" class="form-control" placeholder="Nhập tin nhắn..." />
                <div class="input-group-append">
                    <button class="btn btn-custom" id="sendMessage">Gửi</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Chatbot CSS -->
    <style>
        .chatbot {
            position: fixed;
            bottom: 70px;
            right: 20px;
            width: 450px;
            z-index: 1050;
        }

        .btn-close {
            background: none;
            border: none;
            color: white;
            font-size: 20px;
            cursor: pointer;
        }

        #chatbotMessages {
            max-height: 300px;
            overflow-y: auto;
            padding: 10px;
        }

        .user-message {
            text-align: right;
            background-color: #dcf8c6;
            padding: 8px;
            border-radius: 10px;
            margin: 5px 0;
            max-width: 70%;
            margin-left: auto;
        }

        .bot-message {
            text-align: left;
            background-color: #f1f0f0;
            padding: 8px;
            border-radius: 10px;
            margin: 5px 0;
            max-width: 70%;
            margin-right: auto;
        }
    </style>


    <!-- Bootstrap JS (Optional) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    @RenderSection("Scripts", required: false)

</body>
</html>

<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    window.onload = function () {
        var successMessage = '@Html.Raw(TempData["Success"])';
        var errorMessage = '@Html.Raw(TempData["Error"])';

        if (successMessage && successMessage !== "null") {
            Swal.fire({
                title: "Thành công!",
                text: successMessage,
                icon: "success",
                confirmButtonColor: "#3085d6",
                confirmButtonText: "Đồng ý"
            });
        }

        if (errorMessage && errorMessage !== "null") {
            Swal.fire({
                title: "Lỗi!",
                text: errorMessage,
                icon: "error",
                confirmButtonColor: "#d33",
                confirmButtonText: "Đóng"
            });
        }
    };

           $(document).ready(function() {
        $('#chatbotIcon').click(function() {
            $('#chatbot').toggle();
        });

        $('#closeChatbot').click(function() {
            $('#chatbot').hide(); // Ẩn chatbot
        });

        $('#sendMessage').click(function() {
            const message = $('#chatbotInput').val();
            if (message) {
                // Hiển thị tin nhắn của người dùng
                $('#chatbotMessages').append('<div class="user-message"><strong>Bạn:</strong> ' + message + '</div>');

                 // Cuộn xuống tin nhắn cuối cùng ngay sau khi append
        const chatMessages = document.getElementById('chatbotMessages');
        chatMessages.scrollTop = chatMessages.scrollHeight;

                $('#chatbotInput').val('');

                // Thêm hiệu ứng đang soạn
                   const typingId = 'typing-indicator';
                $('#chatbotMessages').append(`<div class="bot-message" id="${typingId}"></div>`);
                const typingInterval = showTypingDots(typingId);

                $.post('/Chatbot/SendMessage', { userMessage: message }, function(data) {
                    clearInterval(typingInterval); // Dừng hiệu ứng
                    $('#' + typingId).remove();    // Xoá
                    $('#chatbotMessages').append('<div class="bot-message"><strong>Chatbot:</strong> ' + data.reply + '</div>');
                     // Cuộn xuống tin nhắn cuối cùng
                    const chatMessages = document.getElementById('chatbotMessages');
                    chatMessages.scrollTop = chatMessages.scrollHeight;
                });

                        }
                    });

                    $('#chatbotInput').keypress(function(e) {
                        if (e.which === 13) {
                            $('#sendMessage').click();
                        }
                    });
                });


        function showTypingDots(elementId) {
        const typingElement = document.getElementById(elementId);
        let dots = 0;
        const interval = setInterval(() => {
            dots = (dots + 1) % 4;
            typingElement.innerHTML =  '.'.repeat(dots);
        }, 500);
        return interval;
    }


</script>

